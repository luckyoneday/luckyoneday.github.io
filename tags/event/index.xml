<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Event on xuyou&#39;s blog</title>
    <link>https://luckyoneday.github.io/tags/event/</link>
    <description>Recent content in Event on xuyou&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 14 Jul 2020 20:57:50 +0800</lastBuildDate><atom:link href="https://luckyoneday.github.io/tags/event/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>input 事件</title>
      <link>https://luckyoneday.github.io/post/3-input-event-overview/</link>
      <pubDate>Tue, 14 Jul 2020 20:57:50 +0800</pubDate>
      
      <guid>https://luckyoneday.github.io/post/3-input-event-overview/</guid>
      <description>&lt;p&gt;背景是业务中的一个文本框应该禁止「输入」 &lt;code&gt;{&lt;/code&gt; 和 &lt;code&gt;}&lt;/code&gt;。但是不能直接对 &lt;code&gt;value&lt;/code&gt; 进行&lt;code&gt;replace&lt;/code&gt;操作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>关于监听事件</title>
      <link>https://luckyoneday.github.io/daily/24-about-event/</link>
      <pubDate>Sun, 29 Mar 2020 14:53:32 +0800</pubDate>
      
      <guid>https://luckyoneday.github.io/daily/24-about-event/</guid>
      <description>今天解决了一个画板独立的 bug，具体表现为当切换了画板的 tab 时，触发 wheel 事件会导致所有画布一起缩放。 后来查看 console 中的 eventListener 发现切换一个 tab 就会在 window 上添加</description>
    </item>
    
    <item>
      <title>Touch Event</title>
      <link>https://luckyoneday.github.io/daily/20-touch-event/</link>
      <pubDate>Sun, 22 Dec 2019 10:19:17 +0800</pubDate>
      
      <guid>https://luckyoneday.github.io/daily/20-touch-event/</guid>
      <description>TouchEvent是一类描述手指在触摸屏面（触摸屏、触摸板）等状态变化的事件。属于一种UIEvent。该事件可以描述与屏幕的一个或多个触点</description>
    </item>
    
    <item>
      <title>鼠标为中心缩放的简单实现</title>
      <link>https://luckyoneday.github.io/daily/18-scale/</link>
      <pubDate>Fri, 20 Dec 2019 21:52:47 +0800</pubDate>
      
      <guid>https://luckyoneday.github.io/daily/18-scale/</guid>
      <description>最终效果: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 // ... useEffect(() =&amp;gt; { const handleScale = (e) =&amp;gt; { // 这里用到了阻止默认</description>
    </item>
    
    <item>
      <title>拖拽的简单实现</title>
      <link>https://luckyoneday.github.io/daily/17-drag/</link>
      <pubDate>Thu, 19 Dec 2019 13:38:10 +0800</pubDate>
      
      <guid>https://luckyoneday.github.io/daily/17-drag/</guid>
      <description>最终效果: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 useEffect(() =&amp;gt; { // 处理移动之类的 const handleMove = (e) =&amp;gt; { const left = nodePosRef.current.x; const top = nodePosRef.current.y; const</description>
    </item>
    
    <item>
      <title>随滚轮滚动的简单实现</title>
      <link>https://luckyoneday.github.io/daily/16-scroll/</link>
      <pubDate>Wed, 18 Dec 2019 15:03:24 +0800</pubDate>
      
      <guid>https://luckyoneday.github.io/daily/16-scroll/</guid>
      <description>#root { width: 100%; height: 240px; border: 2px solid #f1f1f1; } .wrapper { width: 100%; height: 100%; } .inner { position: absolute; z-index: 10; width: 100px; height: 100px; transform-origin: 0 0; background: #1199ee; } 效果见蓝色方块。（移动端不支持） 这里就要用到之前提到过的wheelEve</description>
    </item>
    
    <item>
      <title>Wheel Event</title>
      <link>https://luckyoneday.github.io/daily/15-wheel-event/</link>
      <pubDate>Tue, 17 Dec 2019 17:21:52 +0800</pubDate>
      
      <guid>https://luckyoneday.github.io/daily/15-wheel-event/</guid>
      <description>和scroll不同的是，scroll是监听页面或元素滚动，wheel是监听滚轮滚动。wheelEvent的默认操作是基于浏览器具体实现的，而</description>
    </item>
    
  </channel>
</rss>
