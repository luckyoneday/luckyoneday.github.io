<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Node on youting&#39;s blog</title>
    <link>https://luckyoneday.github.io/tags/node/</link>
    <description>Recent content in Node on youting&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 23 Mar 2021 21:30:52 +0800</lastBuildDate><atom:link href="https://luckyoneday.github.io/tags/node/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>服务端渲染合集</title>
      <link>https://luckyoneday.github.io/post/6-ssr-data/</link>
      <pubDate>Tue, 23 Mar 2021 21:30:52 +0800</pubDate>
      
      <guid>https://luckyoneday.github.io/post/6-ssr-data/</guid>
      <description>&lt;p&gt;数据预取在服务端渲染中是很重要的一环，具体操作就是在服务端发送请求，灌入组件后使首屏页面直出；客户端也使用服务端获取的数据来保持数据同步。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>服务端渲染热更新</title>
      <link>https://luckyoneday.github.io/daily/10-ssr-4/</link>
      <pubDate>Sun, 08 Dec 2019 08:37:33 +0800</pubDate>
      
      <guid>https://luckyoneday.github.io/daily/10-ssr-4/</guid>
      <description>之前每次都是先npm run build然后npm start，这个过程真的是漫长且难受！于是就想着还是查下资料看怎么接热更新！ client 用到了react-h</description>
    </item>
    
    <item>
      <title>服务端渲染添加样式</title>
      <link>https://luckyoneday.github.io/daily/9-ssr-3/</link>
      <pubDate>Sat, 07 Dec 2019 15:29:24 +0800</pubDate>
      
      <guid>https://luckyoneday.github.io/daily/9-ssr-3/</guid>
      <description>客户端打包用mini-css-extract-plugin将 antd.css 抽出来作为单独的 css 文件，在 HTML 文件中引入；将 *.module.scss 用ignore-loader ignore 掉不</description>
    </item>
    
    <item>
      <title>服务端渲染路由同构</title>
      <link>https://luckyoneday.github.io/daily/8-ssr-2/</link>
      <pubDate>Fri, 06 Dec 2019 14:20:21 +0800</pubDate>
      
      <guid>https://luckyoneday.github.io/daily/8-ssr-2/</guid>
      <description>由于服务端都是无状态的，所以服务端渲染与浏览器端是不一样的，基本就是用无状态的&amp;lt;StaticRouter&amp;gt;代替浏览器端的&amp;lt;</description>
    </item>
    
    <item>
      <title>关于服务端渲染</title>
      <link>https://luckyoneday.github.io/daily/6-ssr-1/</link>
      <pubDate>Wed, 04 Dec 2019 10:51:12 +0800</pubDate>
      
      <guid>https://luckyoneday.github.io/daily/6-ssr-1/</guid>
      <description>本地打包完的 server.bundle.js 运行时，浏览器拿到的 js 文件返回也是个 HTML 很绝望，还报了Unexpected token &amp;lt;的错误，js 文件返回的开头竟然是&amp;lt;!D</description>
    </item>
    
    <item>
      <title>关于登录状态</title>
      <link>https://luckyoneday.github.io/daily/2-koa-session/</link>
      <pubDate>Fri, 29 Nov 2019 13:36:19 +0800</pubDate>
      
      <guid>https://luckyoneday.github.io/daily/2-koa-session/</guid>
      <description>没有使用 jwt 鉴权，因为 cookie 有大小限制，就总觉得少存一些东西比较好，而且对「退出登录」怎么处理 jwt 没有搞清楚，前端可能是清除 cookie，那后端怎么</description>
    </item>
    
  </channel>
</rss>
